package com.example.pdfproject.PdfFacture;

import jakarta.servlet.http.HttpServletResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

@RestController
@RequestMapping("/api/pdf")
public class SubscriptionPdfController {

    private static final Logger logger = Logger.getLogger(SubscriptionPdfController.class.getName());

    @Autowired
    private PdfSouscription pdfSouscription;

    @GetMapping("/generate")
    public void generatePdf(@RequestParam int factureId, HttpServletResponse response) {
        try {
            byte[] pdfBytes = pdfSouscription.generatePdf(factureId);

            if (pdfBytes == null) {
                response.sendError(HttpServletResponse.SC_NOT_FOUND, "Facture non trouvée");
                return;
            }

            response.setContentType("application/pdf");
            response.setHeader("Content-Disposition", "attachment; filename=facture_" + factureId + ".pdf");
            response.setContentLength(pdfBytes.length);

            response.getOutputStream().write(pdfBytes);
            response.getOutputStream().flush();
        } catch (IOException e) {
            logger.log(Level.SEVERE, "Erreur lors de la génération du PDF", e);
            try {
                response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "Erreur lors de la génération du PDF");
            } catch (IOException ioException) {
                logger.log(Level.SEVERE, "Erreur lors de l'envoi du message d'erreur", ioException);
            }
        }
    }
}

